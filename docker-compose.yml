version: "3.9"
services:
  api:
    image: go-nclouds-app
    build: .
    container_name: nclouds-backend
    environment:
      - PORT=${PORT}
      - ENV=Production
      - DB_HOST=${DC_DB_HOST}
      - DB_PORT=${DC_DB_PORT}
      - DB_USER=${DC_DB_USER}
      - DB_NAME=${DC_DB_NAME}
      - DB_PASSWORD=${DC_DB_PASSWORD}

      - RDB_HOST=${DC_RDB_HOST}
      - RDB_PORT=${DC_RDB_PORT}
      - RDB_NAME=${DC_RDB_NAME}
      - RDB_PASSWORD=${DC_RDB_PASSWORD}
    ports:
      - ${PORT}:${PORT}
    volumes:
      - backend-api:/usr/src/app
    depends_on:
      - postgres
      - redis
    networks:
      - backend
      - fullstack

  frontend:
    image: react-nclouds-app
    container_name: nclouds-frontend
    ports:
      - 3000:80
    depends_on:
      - api
    networks:
      - fullstack

  postgres:
    image: postgres:14.2
    container_name: nclouds-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: ${DC_PG_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_secret_file
      POSTGRES_DB: ${DC_PG_NAME}
      DATABASE_HOST: ${DC_PG_HOST}
    ports:
      - "${DC_PORT_PG}:5432"
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - database-config:/etc/postgresql
      - database-postgres:/var/lib/postgresql/data
    networks:
      - backend
    secrets:
      - pg_secret_file
    user: postgres

  redis:
    image: redis:7.0.0
    container_name: nclouds-redis
    restart: on-failure
    ports:
      - "${DC_PORT_RDS}:6379"
    volumes:
      - cache-redis:/data
    depends_on:
      - postgres
    networks:
      - backend

volumes:
  backend-api:
  frontend:
  database-config:
  database-postgres:
  cache-redis:


networks:
  fullstack:
    driver: bridge
  backend:
    driver: bridge

secrets:
  pg_secret_file:
    file: pg_secret.txt
